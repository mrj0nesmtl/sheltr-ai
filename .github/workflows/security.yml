name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'

permissions:
  contents: read
  security-events: write
  # Explicitly deny dangerous permissions
  actions: none
  id-token: none
  packages: none

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'apps/web/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd apps/web
        npm ci
        
    - name: Run npm audit
      continue-on-error: true
      run: |
        cd apps/web
        npm audit --audit-level=moderate
        
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        cd apps/api
        pip install -r requirements.txt
        
    - name: Run safety check
      continue-on-error: true
      run: |
        pip install safety
        cd apps/api
        safety check

# CodeQL analysis is handled by dedicated .github/workflows/codeql.yml
# This prevents duplicate CodeQL runs and configuration conflicts
# The upload-sarif actions below are for OTHER security tools (Trivy, Checkov), NOT CodeQL

  secrets-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
        extra_args: --debug --only-verified
        
  docker-security:
    name: Docker Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Build Docker image
      run: |
        docker build -t sheltr-security-scan:latest . || echo "Docker build failed - using base image for scanning"
        if ! docker images | grep -q sheltr-security-scan; then
          docker pull node:18-alpine
          docker tag node:18-alpine sheltr-security-scan:latest
        fi
        
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      continue-on-error: true
      with:
        image-ref: 'sheltr-security-scan:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
        category: 'trivy-results'

  license-compliance:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install license checker
      run: npm install -g license-checker
      
    - name: Check frontend licenses
      run: |
        cd apps/web
        npm ci
        license-checker --summary
        
    - name: Check for prohibited licenses
      continue-on-error: true
      run: |
        cd apps/web
        license-checker --excludePackages "dev-package@0.0.0" --restrict "GPL;AGPL;LGPL;CPAL;OSL;EPL;CPOL" --summary

  infrastructure-scan:
    name: Infrastructure Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Run Checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .
        framework: dockerfile,github_actions
        output_format: sarif
        output_file_path: checkov-results.sarif
        quiet: true
        soft_fail: true
        
    - name: Upload Checkov scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: checkov-results.sarif
        category: 'checkov-results'

  security-policy-check:
    name: Security Policy Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Validate SECURITY.md exists
      run: |
        if [ ! -f "SECURITY.md" ]; then
          echo "‚ùå SECURITY.md file is missing"
          exit 1
        fi
        echo "‚úÖ SECURITY.md file found"
        
    - name: Check for security best practices
      run: |
        echo "üîç Checking security configurations..."
        
        # Check for common security files
        files=(".github/dependabot.yml" ".github/workflows/security.yml" ".gitignore")
        for file in "${files[@]}"; do
          if [ -f "$file" ]; then
            echo "‚úÖ $file exists"
          else
            echo "‚ö†Ô∏è  $file is missing"
          fi
        done
        
        # Check for sensitive files that shouldn't be committed
        sensitive_patterns=("*.key" "*.pem" ".env" "*.p12" "*.pfx")
        echo "üîç Checking for sensitive files..."
        for pattern in "${sensitive_patterns[@]}"; do
          if find . -name "$pattern" -not -path "./.git/*" | grep -q .; then
            echo "‚ùå Found potential sensitive files matching $pattern"
            find . -name "$pattern" -not -path "./.git/*"
            exit 1
          fi
        done
        echo "‚úÖ No sensitive files found in repository"

  notification:
    name: Security Notification
    runs-on: ubuntu-latest
    needs: [dependency-scan, secrets-scan, docker-security, license-compliance, infrastructure-scan, security-policy-check]
    if: failure()
    
    steps:
    - name: Send security alert
      run: |
        echo "üö® Security scan failed! Check the workflow results."
        echo "Security issues detected in SHELTR repository."
        # In production, this would send alerts to security team
