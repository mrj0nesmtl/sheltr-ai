rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // =================================================================
    // HELPER FUNCTIONS FOR ROLE-BASED ACCESS CONTROL
    // =================================================================
    
    // Check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Get user data from the users collection
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    // Check user roles
    function isSuperAdmin() {
      return isAuthenticated() && getUserData().role == 'super_admin';
    }
    
    function isAdmin() {
      return isAuthenticated() && getUserData().role == 'admin';
    }
    
    function isParticipant() {
      return isAuthenticated() && getUserData().role == 'participant';
    }
    
    function isDonor() {
      return isAuthenticated() && getUserData().role == 'donor';
    }
    
    // Check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Check if admin manages this shelter
    function canManageShelter(shelterId) {
      return isSuperAdmin() || 
             (isAdmin() && getUserData().shelter_id == shelterId);
    }
    
    // =================================================================
    // USERS COLLECTION - Core user profiles
    // =================================================================
    match /users/{userId} {
      // Read: Users can read their own profile, admins can read users in their shelter, super_admin can read all
      allow read: if isOwner(userId) || 
                     isSuperAdmin() ||
                     (isAdmin() && resource.data.shelter_id == getUserData().shelter_id);
      
      // Write: Users can update their own profile, admins can update users in their shelter, super_admin can update all
      allow write: if isOwner(userId) || 
                      isSuperAdmin() ||
                      (isAdmin() && resource.data.shelter_id == getUserData().shelter_id);
      
      // Create: Anyone authenticated can create their own user profile
      allow create: if isAuthenticated() && isOwner(userId);
    }
    
    // =================================================================
    // TENANTS COLLECTION - Multi-tenant platform structure
    // =================================================================
    match /tenants/{tenantId} {
      // Read: Super admin can read all tenants, admins can read their own tenant
      allow read: if isSuperAdmin() || 
                     (isAdmin() && getUserData().tenant_id == tenantId);
      
      // Write: Super admin can write all tenants, admins can write their own tenant
      allow write: if isSuperAdmin() || 
                      (isAdmin() && getUserData().tenant_id == tenantId);
      
      // Create: Super admin can create tenants
      allow create: if isSuperAdmin();
    }
    
    // Tenant sub-collections (platform data, shelters, etc.)
    match /tenants/{tenantId}/{document=**} {
      // Read: Super admin can read all tenant data, admins can read their own tenant data
      allow read: if isSuperAdmin() || 
                     (isAdmin() && getUserData().tenant_id == tenantId);
      
      // Write: Super admin can write all tenant data, admins can write their own tenant data
      allow write: if isSuperAdmin() || 
                      (isAdmin() && getUserData().tenant_id == tenantId);
      
      // Create: Super admin can create tenant data, admins can create data in their own tenant
      allow create: if isSuperAdmin() || 
                       (isAdmin() && getUserData().tenant_id == tenantId);
    }
    
    // =================================================================
    // SHELTERS COLLECTION - Shelter information and management
    // =================================================================
    match /shelters/{shelterId} {
      // Read: Super admin can read all, admins can read their own shelter, participants/donors can read basic info
      allow read: if isAuthenticated();
      
      // Write: Super admin can write all, admins can write their own shelter
      allow write: if canManageShelter(shelterId);
    }
    
    // =================================================================
    // PARTICIPANTS COLLECTION - Participant profiles and data
    // =================================================================
    match /participants/{participantId} {
      // Read: Owner, their shelter admin, super admin
      allow read: if isOwner(participantId) || 
                     isSuperAdmin() ||
                     (isAdmin() && resource.data.shelter_id == getUserData().shelter_id);
      
      // Write: Owner, their shelter admin, super admin
      allow write: if isOwner(participantId) || 
                      isSuperAdmin() ||
                      (isAdmin() && resource.data.shelter_id == getUserData().shelter_id);
      
      // Create: Authenticated users can create their own participant profile
      allow create: if isAuthenticated() && isOwner(participantId);
    }
    
    // =================================================================
    // DONATIONS COLLECTION - Donation records and tracking
    // =================================================================
    match /donations/{donationId} {
      // Read: Donors can read their own donations, participants can read donations to them, 
      // admins can read donations in their shelter, super admin can read all
      allow read: if isSuperAdmin() ||
                     (isDonor() && resource.data.donor_id == request.auth.uid) ||
                     (isParticipant() && resource.data.participant_id == request.auth.uid) ||
                     (isAdmin() && resource.data.shelter_id == getUserData().shelter_id);
      
      // Write: System creates donations (via backend), super admin can modify
      allow write: if isSuperAdmin();
      
      // Create: Authenticated users can create donations (validated by backend)
      allow create: if isAuthenticated();
    }
    
    // =================================================================
    // DEMO_DONATIONS COLLECTION - Demo/test donation records
    // =================================================================
    match /demo_donations/{donationId} {
      // Read: All authenticated users can read demo donations for testing/analytics
      allow read: if isAuthenticated();
      
      // Write: Super admin can modify demo donations
      allow write: if isSuperAdmin();
      
      // Create: All authenticated users can create demo donations for testing
      allow create: if isAuthenticated();
    }
    
    // =================================================================
    // QR_CODES COLLECTION - QR code management
    // =================================================================
    match /qr_codes/{qrCodeId} {
      // Read: Owner, their shelter admin, super admin
      allow read: if isOwner(resource.data.participant_id) || 
                     isSuperAdmin() ||
                     (isAdmin() && resource.data.shelter_id == getUserData().shelter_id);
      
      // Write: Owner, their shelter admin, super admin
      allow write: if isOwner(resource.data.participant_id) || 
                      isSuperAdmin() ||
                      (isAdmin() && resource.data.shelter_id == getUserData().shelter_id);
      
      // Create: Participants can create their own QR codes
      allow create: if isAuthenticated();
    }
    
    // =================================================================
    // ANALYTICS COLLECTION - Platform analytics and insights
    // =================================================================
    match /analytics/{analyticsId} {
      // Read: Admins can read analytics for their shelter, super admin can read all
      allow read: if isSuperAdmin() ||
                     (isAdmin() && resource.data.shelter_id == getUserData().shelter_id);
      
      // Write: Super admin only (analytics generated by system)
      allow write: if isSuperAdmin();
    }
    
    // =================================================================
    // SERVICES COLLECTION - Available services and resources
    // =================================================================
    match /services/{serviceId} {
      // Read: All authenticated users can read services
      allow read: if isAuthenticated();
      
      // Write: Admins can write services for their shelter, super admin can write all
      allow write: if isSuperAdmin() ||
                      (isAdmin() && resource.data.shelter_id == getUserData().shelter_id);
      
      // Create: Admins can create services
      allow create: if isAdmin() || isSuperAdmin();
    }
    
    // =================================================================
    // KNOWLEDGE_BASE COLLECTION - AI chatbot knowledge base
    // =================================================================
    match /knowledge_base/{docId} {
      // Read: All authenticated users can read public knowledge
      allow read: if isAuthenticated();
      
      // Write: Super admin only
      allow write: if isSuperAdmin();
    }
    
    // =================================================================
    // CHAT_SESSIONS COLLECTION - Chatbot conversation history
    // =================================================================
    match /chat_sessions/{sessionId} {
      // Read: Owner, super admin
      allow read: if isOwner(resource.data.user_id) || isSuperAdmin();
      
      // Write: Owner, super admin
      allow write: if isOwner(resource.data.user_id) || isSuperAdmin();
      
      // Create: Authenticated users can create their own chat sessions
      allow create: if isAuthenticated();
    }
    
    // =================================================================
    // SYSTEM CONFIGURATION - Platform-wide settings
    // =================================================================
    match /system/{configId} {
      // Read: Super admin only
      allow read: if isSuperAdmin();
      
      // Write: Super admin only
      allow write: if isSuperAdmin();
    }
    
    // =================================================================
    // AUDIT_LOGS COLLECTION - Security and audit logging
    // =================================================================
    match /audit_logs/{logId} {
      // Read: Super admin only
      allow read: if isSuperAdmin();
      
      // Write: System only (no client writes)
      allow write: if false;
      
      // Create: System only
      allow create: if false;
    }
    
    // =================================================================
    // PARTICIPANT SUB-COLLECTIONS
    // =================================================================
    
    // Participant services history
    match /participants/{participantId}/services/{serviceId} {
      allow read, write: if isOwner(participantId) || 
                            isSuperAdmin() ||
                            (isAdmin() && get(/databases/$(database)/documents/participants/$(participantId)).data.shelter_id == getUserData().shelter_id);
    }
    
    // Participant donation history
    match /participants/{participantId}/donations/{donationId} {
      allow read: if isOwner(participantId) || 
                     isSuperAdmin() ||
                     (isAdmin() && get(/databases/$(database)/documents/participants/$(participantId)).data.shelter_id == getUserData().shelter_id);
      allow write: if false; // Donations created by system only
    }
    
    // =================================================================
    // SHELTER SUB-COLLECTIONS
    // =================================================================
    
    // Shelter staff
    match /shelters/{shelterId}/staff/{staffId} {
      allow read, write: if canManageShelter(shelterId);
    }
    
    // Shelter services
    match /shelters/{shelterId}/services/{serviceId} {
      allow read: if isAuthenticated();
      allow write: if canManageShelter(shelterId);
    }
    
    // Shelter analytics
    match /shelters/{shelterId}/analytics/{analyticsId} {
      allow read: if canManageShelter(shelterId);
      allow write: if isSuperAdmin();
    }
    
    // =================================================================
    // PLATFORM MANAGEMENT COLLECTIONS
    // =================================================================
    
    // Feature flags - Super Admin can manage, all authenticated users can read
    match /feature_flags/{flagId} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin();
    }
    
    // System alerts - Super Admin can manage, all authenticated users can read
    match /system_alerts/{alertId} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin();
    }
    
    // Platform metrics - Super Admin can manage, all authenticated users can read
    match /platform_metrics/{metricId} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin();
    }
    
    // Newsletter signups - Super Admin can manage, all authenticated users can read, anyone can create
    match /newsletter_signups/{signupId} {
      allow read: if isAuthenticated();
      allow create: if true; // Allow anyone to sign up for newsletter
      allow update, delete: if isSuperAdmin();
    }
    
    // =================================================================
    // BLOG COLLECTIONS - Blog post management
    // =================================================================
    
    // Blog posts - Super Admin can manage, all authenticated users can read published posts
    match /blog_posts/{postId} {
      allow read: if isAuthenticated() && (resource.data.status == 'published' || isSuperAdmin());
      allow write: if isSuperAdmin();
    }
    
    // Blog categories - Super Admin can manage, all authenticated users can read
    match /blog_categories/{categoryId} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin();
    }
    
    // Blog tags - Super Admin can manage, all authenticated users can read
    match /blog_tags/{tagId} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin();
    }
    
    // =================================================================
    // CHATBOT COLLECTIONS - Chat sessions and messages
    // =================================================================
    
    // Chat sessions - Users can manage their own sessions, Super Admin can read all
    match /chat_sessions/{sessionId} {
      allow read: if isAuthenticated() && (resource.data.user_id == request.auth.uid || isSuperAdmin());
      allow write: if isAuthenticated() && (resource.data.user_id == request.auth.uid || isSuperAdmin());
      allow create: if isAuthenticated() && request.resource.data.user_id == request.auth.uid;
    }
    
    // Chat messages - Users can manage messages in their sessions, Super Admin can read all
    match /chat_messages/{messageId} {
      allow read: if isAuthenticated() && (
        get(/databases/$(database.name)/documents/chat_sessions/$(resource.data.session_id)).data.user_id == request.auth.uid || 
        isSuperAdmin()
      );
      allow write: if isAuthenticated() && (
        get(/databases/$(database.name)/documents/chat_sessions/$(request.resource.data.session_id)).data.user_id == request.auth.uid || 
        isSuperAdmin()
      );
    }
    
    // Agent configurations - Super Admin can manage, all authenticated users can read
    match /agent_configurations/{agentId} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin();
    }
    
    // =================================================================
    // FALLBACK RULE - Deny all other access
    // =================================================================
    match /{document=**} {
      allow read, write: if false;
    }
  }
}